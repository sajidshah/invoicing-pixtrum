rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the resource
    function isOwner(ownedBy) {
      return request.auth.uid == ownedBy;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if false; // Users cannot delete themselves via client
    }
    
    // Clients collection
    match /clients/{clientId} {
      allow read: if isAuthenticated() && isOwner(resource.data.ownedBy);
      allow create: if isAuthenticated() 
                    && request.resource.data.ownedBy == request.auth.uid;
      allow update: if isAuthenticated() 
                    && isOwner(resource.data.ownedBy)
                    && request.resource.data.ownedBy == resource.data.ownedBy;
      allow delete: if isAuthenticated() && isOwner(resource.data.ownedBy);
    }
    
    // Invoices collection
    match /invoices/{invoiceId} {
      allow read: if isAuthenticated() && isOwner(resource.data.ownedBy);
      allow create: if isAuthenticated() 
                    && request.resource.data.ownedBy == request.auth.uid;
      allow update: if isAuthenticated() 
                    && isOwner(resource.data.ownedBy)
                    && request.resource.data.ownedBy == resource.data.ownedBy;
      allow delete: if isAuthenticated() && isOwner(resource.data.ownedBy);
    }
    
    // Settings collection
    match /settings/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow create: if isAuthenticated() 
                    && request.auth.uid == userId
                    && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() 
                    && request.auth.uid == userId
                    && request.resource.data.userId == userId;
      allow delete: if false; // Settings cannot be deleted
    }
  }
}
